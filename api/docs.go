// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/notifications": {
            "post": {
                "description": "Send notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Send notification",
                "parameters": [
                    {
                        "description": "send notification params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SendResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.SendResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.SendResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "emptypb.Empty": {
            "type": "object"
        },
        "dto.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "dto.Payload": {
            "type": "object",
            "properties": {
                "is_split_by_blocks_enabled": {
                    "type": "boolean"
                },
                "thread_id": {
                    "type": "string"
                }
            }
        },
        "dto.SendRequest": {
            "type": "object",
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "channel": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/dto.Payload"
                },
                "title": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "dto.SendResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/dto.Payload"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Error"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "omnitep-bfb-ms",
	Description:      "gRPC Client",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
